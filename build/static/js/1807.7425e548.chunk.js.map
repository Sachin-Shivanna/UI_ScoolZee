{"version":3,"file":"static/js/1807.7425e548.chunk.js","mappings":"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","sources":["constants/ClassInfoTableHeaders.js","constants/EventAudienceCategory.js","constants/EventNotificationMode.js","constants/EventTypes.js","constants/UsersTableHeaders.js","pages/events/EventsStyles.js","pages/events/newEvent/ClassAudience.js","pages/events/newEvent/ProfileAudience.js","pages/events/newEvent/UserAudience.js"],"sourcesContent":["export const columns = [\n  { id: 'section', label: 'Section', minWidth: 100, align: 'center', style: { fontSize: 'xxx-large', fontWeight: 'lighter' } },\n  { id: 'leadInstructor', label: 'Lead Instructor', minWidth: 170, align: 'center' },\n  {\n    id: 'subject',\n    label: 'Subject',\n    minWidth: 170,\n    align: 'center',\n    format: (value) => value.toLocaleString('en-US'),\n    style: { lineHeight: 4 }\n  },\n  {\n    id: 'instructor',\n    label: 'Instructor',\n    minWidth: 170,\n    align: 'center',\n    format: (value) => value.toLocaleString('en-US'),\n  },\n  {\n    id: 'sessionsPerWeek',\n    label: 'Sessions/week',\n    maxWidth: 70,\n    align: 'center',\n    format: (value) => value.toLocaleString('en-US')\n  },\n  {\n    id: 'totalStudents',\n    label: 'Total Students',\n    maxWidth: 70,\n    align: 'center',\n    format: (value) => value.toLocaleString('en-US')\n  }\n];\n\nexport const classAudienceHeader = [\n  { id: 'class', label: 'Class', minWidth: 170, align: 'center' },\n  { id: 'section', label: 'Section', minWidth: 100, align: 'center', style: { fontSize: 'xxx-large', fontWeight: 'lighter' } },\n  {\n    id: 'leadInstructor',\n    label: 'Lead Instructor',\n    minWidth: 170,\n    align: 'center',\n    format: (value) => value.toLocaleString('en-US'),\n  },\n  {\n    id: 'totalStudents',\n    label: 'Total Students',\n    maxWidth: 70,\n    align: 'center',\n    format: (value) => value.toLocaleString('en-US')\n  },\n  { id: 'includeCaregiver', label: 'Include Caregiver', type: 'boolean', minWidth: 170, align: 'center' },\n  { id: 'select', label: 'Select', minWidth: 170,type: 'boolean', align: 'center' },\n]","export const eventAudienceCategory = [\n    {value: 'profile', label: 'Profile'},\n    {value: 'classes', label: 'Classes'},\n    {value: 'users', label: 'Users'},\n    {value: 'institution', label: 'Institution'},\n]","export const eventNotificationMode = [\n    {value: 'inApp', label: 'In App'},\n    {value: 'email', label: 'Email'},\n    {value: 'whatsapp', label: 'Whatsapp'}\n]","export const eventTypes = [\n    {value: 'acadamics', label: 'Academics'},\n    {value: 'sports', label: 'Sports'},\n    {value: 'cultural', label: 'Cultural'},\n    {value: 'others', label: 'Others'}\n]","export const columns = [\n    { id: 'name', label: 'Name', minWidth: 170 },\n    { id: 'profile', label: 'Profile', minWidth: 100 },\n    {\n      id: 'email',\n      label: 'Email',\n      minWidth: 170,\n      align: 'center',\n      format: (value) => value?.toLocaleString('en-US'),\n    },\n    {\n      id: 'phone',\n      label: 'Phone',\n      minWidth: 170,\n      align: 'center',\n      format: (value) => value?.toLocaleString('en-US'),\n    },\n    {\n      id: 'status',\n      label: 'Active',\n      minWidth: 170,\n      align: 'center',\n      format: (value) => value?.toFixed(2),\n    },\n    {\n      id: 'reset',\n      label: 'Reset Password',\n      minWidth: 170,\n      align: 'center',\n      format: (value) => value?.toFixed(2),\n    },\n  ];","import { makeStyles } from \"@material-ui/core/styles\";\nimport { styled } from '@mui/material/styles';\nimport TableCell, { tableCellClasses } from '@mui/material/TableCell';\n\nexport const useStyles = makeStyles(theme => ({\n    gridElement: {\n        margin: '20px 10px',\n        display: 'flex',\n        width: '100%',\n        [theme.breakpoints.down('sm')]: {\n            padding: '0px 0px 15px 0px !important',\n            margin: 0\n        }\n    },\n    hideButtons: {\n        [theme.breakpoints.down('sm')]: {\n            display: 'none'\n        }\n    },\n    header: {\n        backgroundColor: '#101F33',\n        padding: '5px',\n        color: theme.palette.common.white,\n        marginTop: '10px',\n        marginBottom : '10px'\n    },\n    grid: {\n        flex: 1,\n        flexDirection: 'row',\n        marginRight: '33px',\n        [theme.breakpoints.down('sm')]: {\n            flexDirection: 'column',\n            padding: '10px'\n        }\n    },\n    label: {\n        fontSize: '1rem',\n        fontFamily: [\"Roboto\", \"Helvetica\", \"Arial\", 'sans-serif'],\n        fontWeight: '400',\n        lineHeight: \"1.5\",\n        letterSpacing: '0.00938em',\n        color: theme.palette.grey[700],\n        '& .MuiTypography-body1': {\n            fontSize: '1.3rem !important',\n        },\n        [theme.breakpoints.down('sm')]: {\n            fontSize: '1rem !important',\n            padding: '7px 10px 0px 7px',\n            '& .MuiTypography-body1': {\n                fontSize: '1rem !important',\n            },\n        }\n    },\n    inputDesign: {\n        fontSize: '1rem',\n        fontFamily: [\"Roboto\", \"Helvetica\", \"Arial\", 'sans-serif'],\n        fontWeight: '400',\n        lineHeight: \"1.5\",\n        padding: '3px 5px 7px !important',\n        letterSpacing: '0.00938em',\n        '& .MuiInputBase-input': {\n            width:10,\n            padding: '3px 5px 7px !important'\n        },\n        [theme.breakpoints.down('sm')]: {\n            padding: '5px 10px 0px 7px',\n            '& .MuiInputBase-input': {\n                padding: '2px 0 7px'\n            }\n        },\n\n    },\n    border:{\n        '& .css-1yhpg23-MuiTableCell-root':{\n            borderBottom : '0px !important'\n        }\n    }\n}))\n\nexport const StyledTableCell = styled(TableCell)(({ theme }) => ({\n    [`&.${tableCellClasses.head}`]: {\n      backgroundColor: '#e9e9e9',\n      color: theme.palette.common.black,\n      padding: '0px',\n        fontWeight: 800,\n    },\n    [`&.${tableCellClasses.body}`]: {\n      fontSize: 14,\n    },\n  }));","import React, { useEffect } from 'react'\nimport axios from 'axios';\nimport { useHistory } from 'react-router-dom';\nimport Paper from '@mui/material/Paper';\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TablePagination from '@mui/material/TablePagination';\nimport TableRow from '@mui/material/TableRow';\nimport Checkbox from '@mui/material/Checkbox';\n\nimport { useStyles, StyledTableCell } from '../EventsStyles';\nimport { classAudienceHeader } from '../../../constants/ClassInfoTableHeaders';\n\nconst ClassAudience = (props) => {\n    const history = useHistory();\n    const classes = useStyles();\n\n    let unmounted = false;\n\n    const [page, setPage] = React.useState(0);\n    const [rowsPerPage, setRowsPerPage] = React.useState(10);\n    const [allClasses, setAllClasses] = React.useState([]);\n    const [allSections, setAllSections] = React.useState([]);\n    const [selectedSections, setSelectedSections] = React.useState([]);\n    const [selectedUsers, setSelectedUsers] = React.useState([]);\n    const [sectionCaregiverIncludes, setSectionCaregiverIncludes] = React.useState([]);\n\n    useEffect(() => {\n        console.log(props.includeCaregivers)\n        getAllClasses();\n    }, [])\n\n    useEffect(() => {\n        props.selectedUsers(selectedUsers)\n    }, [selectedUsers])\n\n\n    const getAllClasses = async () => {\n        unmounted = false;\n        //props.pageLoading = true;\n        let allSectionsTemp = [];\n        const source = axios.CancelToken.source();\n        await axios.get(`${process.env.REACT_APP_SERVER}/classes-info`)\n            .then((response) => {\n                if (response.status === 200) {\n                    console.log(response.data)\n                    //props.pageLoading = false;\n                    setAllClasses(response.data);\n                    response.data.forEach(classRec => {\n                        allSectionsTemp.push(...classRec.divisions)\n                    });\n                    setAllSections(allSectionsTemp);\n                }\n            })\n            .catch((error) => {\n                console.log(error)\n                if (!unmounted) {\n                    if (error.request?.status === 403) {\n                        localStorage.removeItem('userDetail');\n                        localStorage.removeItem('userToken');\n                        localStorage.removeItem('activeSubscription');\n                        history.replace('/login');\n                        history.go(0);\n                    }\n                }\n            })\n            .finally(() => {\n                return function () {\n                    unmounted = true;\n                    source.cancel(\"Cancelling in cleanup\");\n                };\n            });\n    }\n\n    const handleChangePage = (event, newPage) => {\n        setPage(newPage);\n    };\n\n    const handleChangeRowsPerPage = (event) => {\n        setRowsPerPage(+event.target.value);\n        setPage(0);\n    };\n\n    const handleSelection = (sectionId) => {\n        console.log(selectedSections.includes(sectionId))\n        if (selectedSections.includes(sectionId)) {\n            setSectionCaregiverIncludes([...sectionCaregiverIncludes.filter(id => id !== sectionId)])\n            setSelectedSections([...selectedSections.filter(id => id !== sectionId)])\n            setSelectedUsers([...selectedUsers?.filter(user => (!allSections.find(sec => sec._id === sectionId)?.students?.map(student => { return student._id })?.includes(user.userId) && !allSections.find(sec => sec._id === sectionId)?.students?.map(student => { return student?.caregiver?._id })?.includes(user.userId)))]);\n\n        }\n        else {\n            setSelectedSections([...selectedSections, sectionId])\n            setSelectedUsers([...selectedUsers.concat(allSections.find(sec => sec._id === sectionId)?.students?.map(student => { return { userId: student._id, userEmail: student.email, userPhone: student.phone1, userProfile: student.profile, userName: student.name } }))])\n        }\n    };\n\n    const handleAllSelection = () => {\n\n        if (allSections?.length === selectedSections?.length) {\n            setSelectedSections([]);\n            setSelectedUsers([])\n        }\n        else {\n            let tempList = []\n            setSelectedSections([...allSections?.map(div => { return div._id })])\n            tempList.push([...allSections.map(sec => { return (sec.students?.map(student => { return { userId: student._id, userEmail: student.email, userPhone: student.phone1 } })) })])\n            let finalUsersList = [].concat.apply([], ...tempList);\n            setSelectedUsers(finalUsersList)\n        }\n    }\n\n    const handleSectionCaregiverInclude = (sectionId) => {\n        let careGiversList = [...allSections.find(sec => sec._id === sectionId)?.students?.map(student => { return student.caregiver })]\n        if (sectionCaregiverIncludes.includes(sectionId)) {\n            setSectionCaregiverIncludes([...sectionCaregiverIncludes.filter(id => id !== sectionId)])\n            setSelectedUsers([...selectedUsers.filter(user => !careGiversList?.map(caregvr => { return caregvr._id })?.includes(user.userId))])\n        }\n        else {\n            setSectionCaregiverIncludes([...sectionCaregiverIncludes, sectionId])\n            setSelectedUsers([...selectedUsers, ...careGiversList.map(caregvr => { return { userId: caregvr._id, userEmail: caregvr.email, userPhone: caregvr.phone1, userProfile: caregvr.profile, userName: caregvr.name } })])\n        }\n    }\n\n    return (\n        <React.Fragment>\n            <Paper sx={{ width: '100%', overflow: 'hidden', marginTop: '10px' }}>\n                <TableContainer sx={{ maxHeight: '100vh' }}>\n                    <Table stickyHeader aria-label=\"sticky table\">\n                        <TableHead >\n                            <TableRow>\n                                {classAudienceHeader.map((column) => (\n                                    column.id !== 'select' && <StyledTableCell\n                                        key={column.id}\n                                        align='center'\n                                        style={{ minWidth: column.minWidth }}\n                                    >\n                                        {column.label}\n                                    </StyledTableCell>\n                                ))}\n                                <StyledTableCell\n                                    key={'select'}\n                                    align='center'\n                                    style={{ minWidth: 100 }}\n                                >\n                                    <Checkbox style={{ backgroundColor: 'white' }} checked={(allSections.length === selectedSections?.length) ? true : false} onChange={handleAllSelection} />\n                                </StyledTableCell>\n                            </TableRow>\n                        </TableHead>\n                        <TableBody>\n                            {allClasses\n                                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                                .map((classRec) => {\n                                    return (\n                                        <TableRow role=\"checkbox\" tabIndex={-1} key={classRec._id}>\n                                            {classAudienceHeader.map((column) => {\n                                                return (\n                                                    <TableCell key={column.id} align='center' style={{ textAlign: '-webkit-center' }}>\n                                                        {\n                                                            column.id === 'class'\n                                                                ? classRec['name'] :\n                                                                column.id !== 'class'\n                                                                    ? classRec.divisions.map((div) => {\n                                                                        return (\n                                                                            <TableRow role=\"checkbox\" tabIndex={-1} key={div._id} >\n                                                                                <TableCell key={div._id} className={classes.border} style={{ minWidth: column.minWidth, borderBottom: 'none', padding: column?.type === 'boolean' ? '10px' : '16px' }} align='center'>\n                                                                                    {\n                                                                                        column.id === 'section'\n                                                                                            ? div['section'] :\n                                                                                            column.id === 'leadInstructor'\n                                                                                                ? div['leadInstructor']?.name :\n                                                                                                column.id === 'totalStudents'\n                                                                                                    ? div['students']?.length :\n                                                                                                    column.id === 'select'\n                                                                                                        ? <Checkbox style={{ padding: 3 }} checked={selectedSections?.includes(div._id) ? true : false} onChange={() => { handleSelection(div._id) }} /> :\n                                                                                                        column.id === 'includeCaregiver'\n                                                                                                            ? <Checkbox style={{ padding: 3 }} disabled={selectedSections?.includes(div._id) ? false : true} checked={sectionCaregiverIncludes.includes(div._id) ? true : false} onChange={() => { handleSectionCaregiverInclude(div._id) }} /> : ''\n                                                                                    }\n                                                                                </TableCell>\n                                                                            </TableRow>\n\n                                                                        )\n                                                                    }) : ''\n                                                        }\n                                                    </TableCell>\n                                                )\n                                            })}\n                                        </TableRow>\n                                    )\n                                })}\n                        </TableBody>\n                    </Table>\n                </TableContainer>\n                <TablePagination\n                    rowsPerPageOptions={[10, 25, 100]}\n                    component=\"div\"\n                    count={allClasses.length}\n                    rowsPerPage={rowsPerPage}\n                    page={page}\n                    onPageChange={handleChangePage}\n                    onRowsPerPageChange={handleChangeRowsPerPage}\n                />\n            </Paper>\n        </React.Fragment>\n    )\n}\n\nexport default React.memo(ClassAudience)","import React, { useEffect } from 'react'\nimport axios from 'axios';\nimport { useHistory } from 'react-router-dom';\nimport Paper from '@mui/material/Paper';\nimport Checkbox from '@mui/material/Checkbox';\n\nimport { useStyles } from '../EventsStyles';\nimport { Button, Grid, List, ListItem, ListItemIcon, ListItemText, Typography } from '@material-ui/core';\n\nconst ProfileAudience = (props) => {\n    const history = useHistory();\n    const classes = useStyles();\n\n    let unmounted = false;\n\n    const [checkedAllProfiles, setCheckedAllProfiles] = React.useState([]);\n    const [checkedSelectedProfiles, setCheckedSelectedProfiles] = React.useState([]);\n    const [allProfilesList, setAllProfilesList] = React.useState([]);\n    const [allActiveUsers, setAllActiveUsers] = React.useState([]);\n    const [selectedProfiles, setSelectedProfiles] = React.useState([]);\n    const [allProfiles, setAllProfiles] = React.useState([]);\n    const [selectedUsers, setSelectedUsers] = React.useState([]);\n\n    useEffect(() => {\n        getAllAvailProfiles();\n        getAllActiveUsers();\n    }, []);\n\n    useEffect(() => {\n        props.selectedUsers(selectedUsers)\n    }, [selectedUsers])\n\n    useEffect(() => {\n        handleUsersToNotify();\n    }, [selectedProfiles])\n\n\n    const getAllActiveUsers = async () => {\n        unmounted = false;\n        const source = axios.CancelToken.source();\n        await axios.get(`${process.env.REACT_APP_SERVER}/active-users-info`)\n            .then((response) => {\n                console.log(response.data);\n\n                setAllActiveUsers(response.data)\n            })\n            .catch((error) => {\n                if (!unmounted) {\n                    if (error.request.status === 403) {\n                        localStorage.removeItem('userDetail');\n                        localStorage.removeItem('userToken');\n                        localStorage.removeItem('activeSubscription');\n                        history.replace('/login');\n                        history.go(0);\n                    }\n                }\n            })\n            .finally(() => {\n                return function () {\n                    unmounted = true;\n                    source.cancel(\"Cancelling in cleanup\");\n                };\n            });\n    }\n\n    const getAllAvailProfiles = async () => {\n        unmounted = false;\n        // props.pageLoading = true;\n        const source = axios.CancelToken.source();\n        await axios.get(`${process.env.REACT_APP_SERVER}/all-avail-profiles`)\n            .then((response) => {\n                console.log(response.data);\n                // props.pageLoading = false;\n                setAllProfilesList(response.data);\n                setAllProfiles(response.data)\n            })\n            .catch((error) => {\n                if (!unmounted) {\n                    if (error.request.status === 403) {\n                        localStorage.removeItem('userDetail');\n                        localStorage.removeItem('userToken');\n                        localStorage.removeItem('activeSubscription');\n                        history.replace('/login');\n                        history.go(0);\n                    }\n                }\n            })\n            .finally(() => {\n                return function () {\n                    unmounted = true;\n                    source.cancel(\"Cancelling in cleanup\");\n                };\n            });\n    }\n\n    const handleUsersToNotify = () => {\n        let usersList = allActiveUsers.filter(user => selectedProfiles.map(profile => { return profile._id }).includes(user.profile._id));\n        setSelectedUsers([...usersList.map(user => { return { userId: user._id, userEmail: user.email, userPhone: user.phone1, userProfile: user.profile, userName: user.name } })]);\n    }\n\n    const handleOnSubjectChecked = (subjectId) => {\n        if (checkedAllProfiles.includes(subjectId)) {\n            setCheckedAllProfiles(checkedAllProfiles.filter(subId => subId !== subjectId));\n        }\n        else if (checkedSelectedProfiles.includes(subjectId)) {\n            setCheckedSelectedProfiles(checkedSelectedProfiles.filter(subId => subId !== subjectId));\n        }\n        else if (allProfilesList.findIndex(subject => subject._id === subjectId) !== -1) {\n            setCheckedAllProfiles([...checkedAllProfiles, subjectId]);\n        }\n        else if (selectedProfiles.findIndex(subject => subject._id === subjectId) !== -1) {\n            setCheckedSelectedProfiles([...checkedSelectedProfiles, subjectId]);\n        }\n    }\n\n    const handleSelectAllProfiles = () => {\n        setSelectedProfiles(allProfilesList);\n        setCheckedSelectedProfiles([...checkedSelectedProfiles, checkedAllProfiles]);\n        setAllProfilesList([]);\n        setCheckedAllProfiles([]);\n    }\n\n    const handleDeselectAllProfiles = () => {\n        setSelectedProfiles([]);\n        setAllProfilesList(allProfiles);\n        setCheckedSelectedProfiles([])\n    }\n\n    const handleSelectChecked = () => {\n        setSelectedProfiles([...selectedProfiles, ...filterListSelect(checkedAllProfiles)]);\n    }\n\n    const handleDeselectChecked = () => {\n        setAllProfilesList([...allProfilesList, ...filterListDeselect(checkedSelectedProfiles)]);\n    }\n\n    const filterListSelect = (toBeSelected) => {\n        setAllProfilesList(allProfilesList.filter(subject => !toBeSelected.includes(subject._id)));\n        return allProfilesList.filter(subject => toBeSelected.includes(subject._id));\n    }\n\n    const filterListDeselect = (toBeDeselected) => {\n        setSelectedProfiles(selectedProfiles.filter(subject => !toBeDeselected.includes(subject._id)));\n        return selectedProfiles.filter(subject => toBeDeselected.includes(subject._id));\n    }\n\n    const customList = (items) => {\n        return (\n            <Paper style={{ minHeight: 305, maxHeight: 305, overflow: 'auto' }}>\n                <List dense component=\"div\" role=\"list\">\n                    {items.map((profile) => {\n                        const labelId = `transfer-list-item-${profile?._id}-label`;\n\n                        return (\n                            <ListItem\n                                key={profile?._id}\n                                role=\"listitem\"\n                                button\n                                onClick={() => { handleOnSubjectChecked(profile?._id) }}\n                            >\n                                <ListItemIcon>\n                                    <Checkbox\n                                        checked={checkedAllProfiles.includes(profile?._id) || checkedSelectedProfiles.includes(profile?._id)}\n                                        tabIndex={-1}\n                                        disableRipple\n                                        inputProps={{\n                                            'aria-labelledby': labelId,\n                                        }}\n                                    />\n                                </ListItemIcon>\n                                <ListItemText id={labelId} primary={`${profile?.name}`} />\n                            </ListItem>\n                        );\n                    })}\n                    <ListItem />\n                </List>\n            </Paper>)\n    }\n\n    return (\n        <React.Fragment>\n            <Grid container spacing={2}>\n                <Grid item xs={5} style={{ paddingTop: 10 }}>\n                    <Typography style={{ backgroundColor: '#e9e9e9', color: 'black' }} className={classes.header}>\n                        All Profiles :\n                    </Typography>\n                    {customList(allProfilesList)}\n                </Grid>\n                <Grid item xs={2} style={{ paddingTop: 50 }}>\n                    <Grid container direction=\"column\" alignItems=\"center\" style={{ paddingTop: '75px' }}>\n                        <Button\n                            sx={{ my: 0.5 }}\n                            variant=\"outlined\"\n                            size=\"small\"\n                            onClick={handleSelectAllProfiles}\n                            disabled={allProfilesList.length === 0}\n                            aria-label=\"move all right\"\n                        >\n                            ≫\n                        </Button>\n                        <Button\n                            sx={{ my: 0.5 }}\n                            variant=\"outlined\"\n                            size=\"small\"\n                            onClick={handleSelectChecked}\n                            disabled={checkedAllProfiles.length === 0}\n                            aria-label=\"move selected right\"\n                        >\n                            &gt;\n                        </Button>\n                        <Button\n                            sx={{ my: 0.5 }}\n                            variant=\"outlined\"\n                            size=\"small\"\n                            onClick={handleDeselectChecked}\n                            disabled={checkedSelectedProfiles.length === 0}\n                            aria-label=\"move selected left\"\n                        >\n                            &lt;\n                        </Button>\n                        <Button\n                            sx={{ my: 0.5 }}\n                            variant=\"outlined\"\n                            size=\"small\"\n                            onClick={handleDeselectAllProfiles}\n                            disabled={selectedProfiles.length === 0}\n                            aria-label=\"move all left\"\n                        >\n                            ≪\n                        </Button>\n                    </Grid>\n                </Grid>\n                <Grid item xs={5} style={{ paddingTop: 10 }}>\n                    <Typography style={{ backgroundColor: '#e9e9e9', color: 'black' }} className={classes.header}>\n                        Selected Profiles :\n                    </Typography>\n                    {customList(selectedProfiles)}\n                </Grid>\n            </Grid>\n        </React.Fragment>\n    )\n}\n\nexport default React.memo(ProfileAudience)","import React, { useEffect } from 'react'\nimport axios from 'axios';\nimport { useHistory } from 'react-router-dom';\nimport Paper from '@mui/material/Paper';\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TablePagination from '@mui/material/TablePagination';\nimport TableRow from '@mui/material/TableRow';\nimport Checkbox from '@mui/material/Checkbox';\n\nimport { columns } from '../../../constants/UsersTableHeaders';\n\nimport { useStyles, StyledTableCell } from '../EventsStyles';\n\nconst UserAudience = (props) => {\n    const history = useHistory();\n\n    let unmounted = false;\n\n    const [page, setPage] = React.useState(0);\n    const [rowsPerPage, setRowsPerPage] = React.useState(10);\n    const [allActiveUsers, setAllActiveUsers] = React.useState([]);\n    const [selectedUsers, setSelectedUsers] = React.useState([]);\n\n    useEffect(() => {\n        getAllActiveUsers();\n    }, [])\n\n    useEffect(() => {\n        props.selectedUsers(selectedUsers)\n    }, [selectedUsers])\n\n    const getAllActiveUsers = async () => {\n        unmounted = false;\n        //props.pageLoading = true;\n        const source = axios.CancelToken.source();\n        await axios.get(`${process.env.REACT_APP_SERVER}/active-users-info`)\n            .then((response) => {\n                console.log(response.data);\n\n                setAllActiveUsers(response.data)\n                //props.pageLoading = false;\n            })\n            .catch((error) => {\n                if (!unmounted) {\n                    if (error.request.status === 403) {\n                        localStorage.removeItem('userDetail');\n                        localStorage.removeItem('userToken');\n                        localStorage.removeItem('activeSubscription');\n                        history.replace('/login');\n                        history.go(0);\n                    }\n                }\n            })\n            .finally(() => {\n                return function () {\n                    unmounted = true;\n                    source.cancel(\"Cancelling in cleanup\");\n                };\n            });\n    }\n\n    const handleChangePage = (event, newPage) => {\n        setPage(newPage);\n    };\n\n    const handleChangeRowsPerPage = (event) => {\n        setRowsPerPage(+event.target.value);\n        setPage(0);\n    };\n\n    const handleSelectedUsers = (userId, userEmail, userPhone, userProfile, userName) => {\n        let tempUserList = []\n        if (selectedUsers?.findIndex(user => user.userId === userId) >= 0) {\n            tempUserList = selectedUsers?.filter(user => user.userId !== userId)\n        }\n        else {\n            tempUserList = [...selectedUsers, { userId, userEmail, userPhone, userProfile, userName }]\n        }\n        setSelectedUsers([...tempUserList]);\n    }\n\n    const handleAllUsersSelect = () => {\n        if (allActiveUsers?.length === selectedUsers?.length) {\n            setSelectedUsers([])\n        }\n        else {\n            setSelectedUsers([...allActiveUsers.map(user => { return ({ userId: user._id, userEmail: user.email, userPhone: user.phone1, userProfile: user.profile, userName: user.name }) })])\n        }\n    }\n\n    return (\n        <React.Fragment>\n            <Paper sx={{ width: '100%', overflow: 'hidden', marginTop: '10px' }}>\n                <TableContainer sx={{ maxHeight: '100vh' }}>\n                    <Table stickyHeader aria-label=\"sticky table\">\n                        <TableHead >\n                            <TableRow>\n                                <StyledTableCell\n                                    key={'select'}\n                                    align='center'\n                                    style={{ minWidth: 100 }}\n                                >\n                                    <Checkbox style={{ backgroundColor: 'white' }} checked={(allActiveUsers?.length === selectedUsers?.length) ? true : false} onChange={handleAllUsersSelect} />\n                                </StyledTableCell>\n                                {columns.map((column) => (\n                                    column.id !== 'status' &&\n                                    column.id !== 'reset' &&\n                                    <StyledTableCell\n                                        key={column.id}\n                                        align='center'\n                                        style={{ minWidth: column.minWidth }}\n                                    >\n                                        {column.label}\n                                    </StyledTableCell>\n                                ))}\n                            </TableRow>\n                        </TableHead>\n                        <TableBody>\n                            {allActiveUsers\n                                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                                .map((row) => {\n                                    return (\n                                        <TableRow role=\"checkbox\" tabIndex={-1} key={row._id}>\n                                            <TableCell\n                                                key={row._id}\n                                                align='center'\n                                                style={{ minWidth: 100 }}>\n                                                <Checkbox style={{ backgroundColor: 'white' }} checked={(selectedUsers?.findIndex(user => user.userId === row._id) >= 0) ? true : false} onChange={() => { handleSelectedUsers(row._id, row.email, row.phone1, row.profile, row.name) }} />\n                                            </TableCell>\n                                            {columns.map((column) => {\n                                                return (\n                                                    column.id !== 'status' &&\n                                                    column.id !== 'reset' &&\n                                                    <TableCell key={column.id} align='center'>\n                                                        {\n                                                            column.id === 'phone'\n                                                                ? column.format(row['phone1']) :\n                                                                column.id === 'email'\n                                                                    ? column.format(row['email']) :\n                                                                    column.id === 'name'\n                                                                        ? row['name'] :\n                                                                        column.id === 'profile'\n                                                                            ? row['profile']?.name : ''\n                                                        }\n                                                    </TableCell>\n                                                );\n                                            })}\n                                        </TableRow>\n                                    );\n                                })}\n                        </TableBody>\n                    </Table>\n                </TableContainer>\n                <TablePagination\n                    rowsPerPageOptions={[10, 25, 100]}\n                    component=\"div\"\n                    count={allActiveUsers.length}\n                    rowsPerPage={rowsPerPage}\n                    page={page}\n                    onPageChange={handleChangePage}\n                    onRowsPerPageChange={handleChangeRowsPerPage}\n                />\n            </Paper>\n        </React.Fragment>\n    )\n}\n\nexport default React.memo(UserAudience)"],"names":["columns","id","label","minWidth","align","style","fontSize","fontWeight","format","value","toLocaleString","lineHeight","maxWidth","classAudienceHeader","type","eventAudienceCategory","eventNotificationMode","eventTypes","toFixed","useStyles","makeStyles","theme","gridElement","margin","display","width","breakpoints","down","padding","hideButtons","header","backgroundColor","color","palette","common","white","marginTop","marginBottom","grid","flex","flexDirection","marginRight","fontFamily","letterSpacing","grey","inputDesign","border","borderBottom","StyledTableCell","styled","TableCell","tableCellClasses","black","ClassAudience","props","history","useHistory","classes","unmounted","React","page","setPage","rowsPerPage","setRowsPerPage","allClasses","setAllClasses","allSections","setAllSections","selectedSections","setSelectedSections","selectedUsers","setSelectedUsers","sectionCaregiverIncludes","setSectionCaregiverIncludes","useEffect","console","log","includeCaregivers","getAllClasses","allSectionsTemp","source","axios","process","then","response","status","data","forEach","classRec","push","divisions","catch","error","request","localStorage","removeItem","replace","go","finally","cancel","sx","overflow","maxHeight","stickyHeader","column","checked","length","onChange","tempList","map","div","_id","sec","students","student","userId","userEmail","email","userPhone","phone1","finalUsersList","concat","apply","slice","role","tabIndex","textAlign","className","name","includes","sectionId","filter","user","find","caregiver","userProfile","profile","userName","handleSelection","disabled","careGiversList","caregvr","handleSectionCaregiverInclude","rowsPerPageOptions","component","count","onPageChange","event","newPage","onRowsPerPageChange","target","ProfileAudience","checkedAllProfiles","setCheckedAllProfiles","checkedSelectedProfiles","setCheckedSelectedProfiles","allProfilesList","setAllProfilesList","allActiveUsers","setAllActiveUsers","selectedProfiles","setSelectedProfiles","allProfiles","setAllProfiles","getAllAvailProfiles","getAllActiveUsers","handleUsersToNotify","usersList","filterListSelect","toBeSelected","subject","filterListDeselect","toBeDeselected","customList","items","minHeight","dense","labelId","button","onClick","subjectId","subId","findIndex","disableRipple","inputProps","primary","container","spacing","item","xs","paddingTop","direction","alignItems","my","variant","size","UserAudience","row","tempUserList","handleSelectedUsers"],"sourceRoot":""}