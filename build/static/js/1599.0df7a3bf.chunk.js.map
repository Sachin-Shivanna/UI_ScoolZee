{"version":3,"file":"static/js/1599.0df7a3bf.chunk.js","mappings":"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","sources":["registration/institutionReg/InstutionStyle.js","registration/institutionReg/InstitutionReg.js","registration/userReg/UserStyle.js","registration/userReg/UserReg.js","registration/regSummary/RegSummaryStyle.js","registration/Registration.js","registration/subscription/Subscription.js","registration/subscription/SubscriptionStyle.js"],"sourcesContent":["import { makeStyles } from \"@material-ui/core/styles\";\n\nexport const useStyles = makeStyles(theme => ({\n    box: {\n        maxWidth: '80%', \n        minHeight: \"80vh\",\n         margin: \"10px auto\"\n      },\n      grid: {\n        width: '50%'\n      },\n      inputContainer : {\n        paddingBottom: 20\n      },\n      input:{\n          width: '300px',\n        [theme.breakpoints.down('sm')]: {\n            width: '250px',\n          }\n      },\n      font:{\n        color: 'rgba(0, 0, 0, 0.54)',\n        padding: 0,\n        fontsize: '1rem',\n        fontfamily: [\"Roboto\", \"Helvetica\", \"Arial\", 'sans-serif'],\n        fontweight: 400,\n        lineheight: 1,\n        letterspacing: '0.00938em'\n      }\n}))","import * as React from 'react';\nimport Box from '@mui/material/Box';\nimport Card from '@mui/material/Card';\nimport CardActions from '@mui/material/CardActions';\nimport CardContent from '@mui/material/CardContent';\nimport Button from '@mui/material/Button';\nimport { FormControl } from '@mui/material';\nimport { Grid } from '@mui/material';\nimport { Container, InputLabel } from '@material-ui/core';\nimport { useStyles } from './InstutionStyle';\nimport TextField from '@mui/material/TextField';\n\n\nconst InstitutionReg = (props) => {\n  const classes = useStyles();\n  const [instName, setInstName] = React.useState(props.institutionDetails.name || '');\n  const [instPhone, setInstPhone] = React.useState(props.institutionDetails.phone || '');\n  const [instEmail, setInstEmail] = React.useState(props.institutionDetails.email || '');\n  const [addrLine1, setAddrLine1] = React.useState(props.institutionDetails.addressLine1 || '');\n  const [addrLine2, setAddrLine2] = React.useState(props.institutionDetails.addressLine2 || '');\n  const [city, setCity] = React.useState(props.institutionDetails.city || '');\n  const [district, setDistrict] = React.useState(props.institutionDetails.district || '');\n  const [state, setState] = React.useState(props.institutionDetails.state || '');\n  const [country, setCountry] = React.useState(props.institutionDetails.country || '');\n  const [pinCode, setPincode] = React.useState(props.institutionDetails.zipCode || '');\n  const [invalidList, setInvalidList] = React.useState([]);\n\n  const handleInstNameChange = (event) => {\n    setInstName(event.target.value);\n  };\n\n  const validate =() => {\n    let isValid = true;\n    let tempInvalidList = [];\n\n    if(!instName){\n      tempInvalidList.push('name');\n      isValid = false;\n    }\n    if(!instPhone){\n      tempInvalidList.push('phone');\n      isValid = false;\n    }\n    if(/[a-zA-Z]/g.test(instPhone)){\n      tempInvalidList.push('phone');\n      isValid = false;\n    }\n    if(instPhone.length !== 10){\n      tempInvalidList.push('phone');\n      isValid = false;\n    }\n    if(!instEmail){\n      tempInvalidList.push('email');\n      isValid = false;\n    }\n    if(!instEmail.match(/\\S+@\\S+\\.\\S+/)){\n      tempInvalidList.push('email');\n      isValid = false;\n    }\n    if(!addrLine1){\n      tempInvalidList.push('addrLine1');\n      isValid = false;\n    }\n    if(!city){\n      tempInvalidList.push('city');\n      isValid = false;\n    }\n    if(!district){\n      tempInvalidList.push('district');\n      isValid = false;\n    }\n    if(!state){\n      tempInvalidList.push('state');\n      isValid = false;\n    }\n    if(!country){\n      tempInvalidList.push('country');\n      isValid = false;\n    }\n    if(!pinCode){\n      tempInvalidList.push('pinCode');\n      isValid = false;\n    }\n    if(isValid){\n      let instrutionData = {\n        'name': instName,\n        'email': instEmail,\n        'phone': instPhone,\n        'addressLine1':addrLine1,\n        'addressLine2': addrLine2,\n        'city':city,\n        'district':district,\n        'state':state,\n        'country':country,\n        'zipCode':pinCode\n      }\n      handleForwardReg(instrutionData);\n    }\n    else{\n      setInvalidList(tempInvalidList);\n    }\n  }\n\n  const handleForwardReg = (instrutionData) => {\n    props.updateActiveStep(1);\n    props.handleInstitutionDetails(instrutionData);\n  }\n\n  return (\n    <Box className={classes.box}>\n      <Card variant=\"outlined\">\n        <CardContent>\n          <Grid container>\n            <Grid item className={classes.grid}>\n              <FormControl variant=\"standard\">\n                <Container className={classes.inputContainer}>\n                  <InputLabel htmlFor=\"component-error\">Institution Name :</InputLabel>\n                  <TextField\n                    error={invalidList.includes('name')}\n                    id=\"name\"\n                    value={instName}\n                    onChange={handleInstNameChange}\n                    aria-describedby=\"component-error-text\"\n                    helperText={!invalidList.includes('name') ? '' : \"Name is invalid\"}\n                    variant=\"standard\"\n                    className={classes.input}\n                  />\n                </Container>\n                <Container className={classes.inputContainer}>\n                  <InputLabel htmlFor=\"component-error\">Institution Phone :</InputLabel>\n                  <TextField\n                    error={invalidList.includes('phone')}\n                    id=\"phone\"\n                    value={instPhone}\n                    onChange={(instPhone) => {setInstPhone(instPhone.target.value)}}\n                    aria-describedby=\"component-error-text\"\n                    helperText={!invalidList.includes('phone') ? '' : \"Phone Number is invalid\"}\n                    variant=\"standard\"\n                    className={classes.input}\n                  />\n                </Container>\n\n              </FormControl>\n            </Grid>\n            <Grid item>\n              <Container className={classes.inputContainer}>\n                <InputLabel htmlFor=\"component-error\">Institution Email :</InputLabel>\n                <TextField\n                  error={invalidList.includes('email')}\n                  id=\"email\"\n                  value={instEmail}\n                  onChange={(email) => {setInstEmail(email.target.value)}}\n                  aria-describedby=\"component-error-text\"\n                  helperText={!invalidList.includes('email') ? '' : \"Email Address is invalid\"}\n                  variant=\"standard\"\n                  className={classes.input}\n                />\n              </Container>\n            </Grid>\n          </Grid>\n          <Grid container>\n            <Grid item style={{ width: '50%' }}>\n              <FormControl error={true} variant=\"standard\">\n                <Container className={classes.inputContainer}>\n                  <InputLabel htmlFor=\"component-error\">Address Line 1 :</InputLabel>\n                  <TextField\n                    error={invalidList.includes('addrLine1')}\n                    id=\"addressLine1\"\n                    value={addrLine1}\n                    onChange={(addrLine1) => {setAddrLine1(addrLine1.target.value)}}\n                    aria-describedby=\"component-error-text\"\n                    helperText={!invalidList.includes('addrLine1') ? '' : \"Address is invalid\"}\n                    variant=\"standard\"\n                    className={classes.input}\n                  />\n                </Container>\n                <Container className={classes.inputContainer}>\n                  <InputLabel htmlFor=\"component-error\">City :</InputLabel>\n                  <TextField\n                    error={invalidList.includes('city')}\n                    id=\"city\"\n                    value={city}\n                    onChange={(city) => {setCity(city.target.value)}}\n                    aria-describedby=\"component-error-text\"\n                    helperText={!invalidList.includes('city') ? '' : \"City is invalid\"}\n                    variant=\"standard\"\n                    className={classes.input}\n                  />\n                </Container>\n                <Container className={classes.inputContainer}>\n                  <InputLabel htmlFor=\"component-error\">State :</InputLabel>\n                  <TextField\n                    error={invalidList.includes('state')}\n                    id=\"state\"\n                    value={state}\n                    onChange={(state) => {setState(state.target.value)}}\n                    aria-describedby=\"component-error-text\"\n                    helperText={!invalidList.includes('state') ? '' : \"State is invalid\"}\n                    variant=\"standard\"\n                    className={classes.input}\n                  />\n                </Container>\n                <Container className={classes.inputContainer}>\n                  <InputLabel htmlFor=\"component-error\">Country :</InputLabel>\n                  <TextField\n                    error={invalidList.includes('country')}\n                    id=\"country\"\n                    value={country}\n                    onChange={(country) => {setCountry(country.target.value)}}\n                    aria-describedby=\"component-error-text\"\n                    helperText={!invalidList.includes('country') ? '' : \"Country is invalid\"}\n                    variant=\"standard\"\n                    className={classes.input}\n                  />\n                </Container>\n              </FormControl>\n            </Grid>\n            <Grid>\n            <Container className={classes.inputContainer}>\n                  <InputLabel htmlFor=\"component-error\">Address Line 2 :</InputLabel>\n                  <TextField\n                    error={invalidList.includes('addrLine2')}\n                    id=\"addressLine2\"\n                    value={addrLine2}\n                    onChange={(addrLine2) => {setAddrLine2(addrLine2.target.value)}}\n                    aria-describedby=\"component-error-text\"\n                    helperText={!invalidList.includes('addrLine2') ? '' : \"Address is invalid\"}\n                    variant=\"standard\"\n                    className={classes.input}\n                  />\n                </Container>\n                <Container className={classes.inputContainer}>\n                  <InputLabel htmlFor=\"component-error\">District :</InputLabel>\n                  <TextField\n                    error={invalidList.includes('district')}\n                    id=\"district\"\n                    value={district}\n                    onChange={(district) => {setDistrict(district.target.value)}}\n                    aria-describedby=\"component-error-text\"\n                    helperText={!invalidList.includes('district') ? '' : \"District is invalid\"}\n                    variant=\"standard\"\n                    className={classes.input}\n                  />\n                </Container>\n                <Container className={classes.inputContainer}>\n                  <InputLabel htmlFor=\"component-error\">PIN Code :</InputLabel>\n                  <TextField\n                    error={invalidList.includes('pinCode')}\n                    id=\"zipCode\"\n                    value={pinCode}\n                    onChange={(pinCode) => {setPincode(pinCode.target.value)}}\n                    aria-describedby=\"component-error-text\"\n                    helperText={!invalidList.includes('pinCode') ? '' : \"PIN Code is invalid\"}\n                    variant=\"standard\"\n                    className={classes.input}\n                  />\n                </Container>\n            </Grid>\n          </Grid>\n        </CardContent>\n        <CardActions style={{margin: \"5px auto\", alignItems:\"center\",justifyContent:\"center\"}}>\n          <Button variant='contained' size=\"medium\" onClick={validate}>Next</Button>\n        </CardActions>\n      </Card>\n    </Box>\n  );\n}\n\nexport default InstitutionReg;\n","import { makeStyles } from \"@material-ui/core/styles\";\n\nexport const useStyles = makeStyles(theme => ({\n    box: {\n        maxWidth: '80%', \n        minHeight: \"80vh\",\n         margin: \"10px auto\"\n      },\n      grid: {\n        width: '50%'\n      },\n      inputContainer : {\n        paddingBottom: 20\n      },\n      input:{\n          width: '300px',\n        [theme.breakpoints.down('sm')]: {\n            width: '250px',\n          }\n      },\n      font:{\n        color: 'rgba(0, 0, 0, 0.54)',\n        padding: 0,\n        fontsize: '1rem',\n        fontfamily: [\"Roboto\", \"Helvetica\", \"Arial\", 'sans-serif'],\n        fontweight: 400,\n        lineheight: 1,\n        letterspacing: '0.00938em'\n      }\n}))","import * as React from 'react';\nimport Box from '@mui/material/Box';\nimport Card from '@mui/material/Card';\nimport CardActions from '@mui/material/CardActions';\nimport CardContent from '@mui/material/CardContent';\nimport Button from '@mui/material/Button';\nimport { FormControl } from '@mui/material';\nimport { Grid } from '@mui/material';\nimport { Container, InputLabel } from '@material-ui/core';\nimport { useStyles } from './UserStyle';\nimport TextField from '@mui/material/TextField';\n\n\nconst UserReg = (props) => {\n  const classes = useStyles();\n  const [userName, setUserName] = React.useState(props.userDetails.name || '');\n  const [userPhone, setUserPhone] = React.useState(props.userDetails.phone || '');\n  const [userEmail, setUserEmail] = React.useState(props.userDetails.email || '');\n  const [addrLine1, setAddrLine1] = React.useState(props.userDetails.addressLine1 || '');\n  const [addrLine2, setAddrLine2] = React.useState(props.userDetails.addressLine2 || '');\n  const [city, setCity] = React.useState(props.userDetails.city || '');\n  const [district, setDistrict] = React.useState(props.userDetails.district || '');\n  const [state, setState] = React.useState(props.userDetails.state || '');\n  const [country, setCountry] = React.useState(props.userDetails.country || '');\n  const [pinCode, setPincode] = React.useState(props.userDetails.zipCode || '');\n  const [invalidList, setInvalidList] = React.useState([]);\n\n\n  const handleUserNameChange = (event) => {\n    setUserName(event.target.value);\n  };\n\n  const validate = (nextStep) => {\n    let isValid = true;\n    let tempInvalidList = [];\n\n    if (nextStep === 2) {\n\n      if (!userName) {\n        tempInvalidList.push('name');\n        isValid = false;\n      }\n      if (!userPhone) {\n        tempInvalidList.push('phone');\n        isValid = false;\n      }\n      if (/[a-zA-Z]/g.test(userPhone)) {\n        tempInvalidList.push('phone');\n        isValid = false;\n      }\n      if (userPhone.length !== 10) {\n        tempInvalidList.push('phone');\n        isValid = false;\n      }\n      if (!userEmail) {\n        tempInvalidList.push('email');\n        isValid = false;\n      }\n      if (!userEmail.match(/\\S+@\\S+\\.\\S+/)) {\n        tempInvalidList.push('email');\n        isValid = false;\n      }\n      if (!addrLine1) {\n        tempInvalidList.push('addrLine1');\n        isValid = false;\n      }\n      if (!city) {\n        tempInvalidList.push('city');\n        isValid = false;\n      }\n      if (!district) {\n        tempInvalidList.push('district');\n        isValid = false;\n      }\n      if (!state) {\n        tempInvalidList.push('state');\n        isValid = false;\n      }\n      if (!country) {\n        tempInvalidList.push('country');\n        isValid = false;\n      }\n      if (!pinCode) {\n        tempInvalidList.push('pinCode');\n        isValid = false;\n      }\n\n    }\n\n    if (isValid) {\n       let UserData = {\n        'name': userName,\n        'email': userEmail,\n        'phone': userPhone,\n        'addressLine1': addrLine1,\n        'addressLine2': addrLine2,\n        'city': city,\n        'district': district,\n        'state': state,\n        'country': country,\n        'zipCode': pinCode\n      };\n      handleForwardReg(nextStep, UserData);\n    }\n    else {\n      setInvalidList(tempInvalidList);\n    }\n  }\n\n  const handleForwardReg = (nextStep, UserData) => {\n    props.updateActiveStep(nextStep);\n    props.handleUserDetails(UserData);\n  }\n\n  return (\n    <Box className={classes.box}>\n      <Card variant=\"outlined\">\n        <CardContent>\n          <Grid container>\n            <Grid item className={classes.grid}>\n              <FormControl variant=\"standard\">\n                <Container className={classes.inputContainer}>\n                  <InputLabel htmlFor=\"component-error\">User Name :</InputLabel>\n                  <TextField\n                    error={invalidList.includes('name')}\n                    id=\"name\"\n                    value={userName}\n                    onChange={handleUserNameChange}\n                    aria-describedby=\"component-error-text\"\n                    helperText={!invalidList.includes('name') ? '' : \"Name is invalid\"}\n                    variant=\"standard\"\n                    className={classes.input}\n                  />\n                </Container>\n                <Container className={classes.inputContainer}>\n                  <InputLabel htmlFor=\"component-error\">User Phone :</InputLabel>\n                  <TextField\n                    error={invalidList.includes('phone')}\n                    id=\"phone\"\n                    value={userPhone}\n                    onChange={(userPhone) => { setUserPhone(userPhone.target.value) }}\n                    aria-describedby=\"component-error-text\"\n                    helperText={!invalidList.includes('phone') ? '' : \"Phone Number is invalid\"}\n                    variant=\"standard\"\n                    className={classes.input}\n                  />\n                </Container>\n\n              </FormControl>\n            </Grid>\n            <Grid item>\n              <Container className={classes.inputContainer}>\n                <InputLabel htmlFor=\"component-error\">User Email :</InputLabel>\n                <TextField\n                  error={invalidList.includes('email')}\n                  id=\"email\"\n                  value={userEmail}\n                  onChange={(email) => { setUserEmail(email.target.value) }}\n                  aria-describedby=\"component-error-text\"\n                  helperText={!invalidList.includes('email') ? '' : \"Email Address is invalid\"}\n                  variant=\"standard\"\n                  className={classes.input}\n                />\n              </Container>\n            </Grid>\n          </Grid>\n          <Grid container>\n            <Grid item style={{ width: '50%' }}>\n              <FormControl error={true} variant=\"standard\">\n                <Container className={classes.inputContainer}>\n                  <InputLabel htmlFor=\"component-error\">Address Line 1 :</InputLabel>\n                  <TextField\n                    error={invalidList.includes('addrLine1')}\n                    id=\"addressLine1\"\n                    value={addrLine1}\n                    onChange={(addrLine1) => { setAddrLine1(addrLine1.target.value) }}\n                    aria-describedby=\"component-error-text\"\n                    helperText={!invalidList.includes('addrLine1') ? '' : \"Address is invalid\"}\n                    variant=\"standard\"\n                    className={classes.input}\n                  />\n                </Container>\n                <Container className={classes.inputContainer}>\n                  <InputLabel htmlFor=\"component-error\">City :</InputLabel>\n                  <TextField\n                    error={invalidList.includes('city')}\n                    id=\"city\"\n                    value={city}\n                    onChange={(city) => { setCity(city.target.value) }}\n                    aria-describedby=\"component-error-text\"\n                    helperText={!invalidList.includes('city') ? '' : \"City is invalid\"}\n                    variant=\"standard\"\n                    className={classes.input}\n                  />\n                </Container>\n                <Container className={classes.inputContainer}>\n                  <InputLabel htmlFor=\"component-error\">State :</InputLabel>\n                  <TextField\n                    error={invalidList.includes('state')}\n                    id=\"state\"\n                    value={state}\n                    onChange={(state) => { setState(state.target.value) }}\n                    aria-describedby=\"component-error-text\"\n                    helperText={!invalidList.includes('state') ? '' : \"State is invalid\"}\n                    variant=\"standard\"\n                    className={classes.input}\n                  />\n                </Container>\n                <Container className={classes.inputContainer}>\n                  <InputLabel htmlFor=\"component-error\">Country :</InputLabel>\n                  <TextField\n                    error={invalidList.includes('country')}\n                    id=\"country\"\n                    value={country}\n                    onChange={(country) => { setCountry(country.target.value) }}\n                    aria-describedby=\"component-error-text\"\n                    helperText={!invalidList.includes('country') ? '' : \"Country is invalid\"}\n                    variant=\"standard\"\n                    className={classes.input}\n                  />\n                </Container>\n              </FormControl>\n            </Grid>\n            <Grid>\n              <Container className={classes.inputContainer}>\n                <InputLabel htmlFor=\"component-error\">Address Line 2 :</InputLabel>\n                <TextField\n                  error={invalidList.includes('addrLine2')}\n                  id=\"addressLine2\"\n                  value={addrLine2}\n                  onChange={(addrLine2) => { setAddrLine2(addrLine2.target.value) }}\n                  aria-describedby=\"component-error-text\"\n                  helperText={!invalidList.includes('addrLine2') ? '' : \"Address is invalid\"}\n                  variant=\"standard\"\n                  className={classes.input}\n                />\n              </Container>\n              <Container className={classes.inputContainer}>\n                <InputLabel htmlFor=\"component-error\">District :</InputLabel>\n                <TextField\n                  error={invalidList.includes('district')}\n                  id=\"district\"\n                  value={district}\n                  onChange={(district) => { setDistrict(district.target.value) }}\n                  aria-describedby=\"component-error-text\"\n                  helperText={!invalidList.includes('district') ? '' : \"District is invalid\"}\n                  variant=\"standard\"\n                  className={classes.input}\n                />\n              </Container>\n              <Container className={classes.inputContainer}>\n                <InputLabel htmlFor=\"component-error\">PIN Code :</InputLabel>\n                <TextField\n                  error={invalidList.includes('pinCode')}\n                  id=\"zipCode\"\n                  value={pinCode}\n                  onChange={(pinCode) => { setPincode(pinCode.target.value) }}\n                  aria-describedby=\"component-error-text\"\n                  helperText={!invalidList.includes('pinCode') ? '' : \"PIN Code is invalid\"}\n                  variant=\"standard\"\n                  className={classes.input}\n                />\n              </Container>\n            </Grid>\n          </Grid>\n        </CardContent>\n        <CardActions style={{ margin: \"5px auto\", alignItems: \"center\", justifyContent: \"center\" }}>\n          <Button variant='contained' size=\"medium\" onClick={() => { validate(0) }}>Previous</Button>\n          <Button variant='contained' size=\"medium\" onClick={() => { validate(2) }}>Next</Button>\n        </CardActions>\n      </Card>\n    </Box>\n  );\n}\n\nexport default UserReg;\n","import { makeStyles } from \"@material-ui/core/styles\";\n\nexport const useStyles = makeStyles(theme => ({\n     container : {\n        position: 'absolute',\n        top: '50%',\n        left: '50%',\n        transform: 'translate(-50%, -50%)',\n        width: '80%',\n        backgroundColor:'#ffffff',\n        border: '0.5px solid #c0c0c07a',\n        boxShadow: 24,\n        p: 4,\n        overflow:'scroll'\n      }\n    }))","import React, { useState, useEffect } from 'react'\nimport Box from '@mui/material/Box';\nimport Stack from '@mui/material/Stack';\nimport Snackbar from '@mui/material/Snackbar';\nimport InstitutionReg from '../registration/institutionReg/InstitutionReg';\nimport UserReg from '../registration/userReg/UserReg';\nimport Subscription from '../registration/subscription/Subscription'\nimport { Step, StepLabel, Stepper } from '@material-ui/core';\nimport axios from 'axios';\nimport RegSummary from './regSummary/RegSummary';\nimport Modal from '@mui/material/Modal';\nimport Loading from '../components/loading/Loading';\nimport { Alert } from '@mui/material';\n\nconst Registration = () => {\n\n    const [activeStep, setActiveStep] = useState(0);\n    const [institutionDetails, setInstitutionDetails] = useState({});\n    const [userDetails, setUserDetails] = useState({});\n    const [selectedPlan, setSelectedPlan] = useState({});\n    const [isPageLoading, setisPageLoading] = useState(false);\n    const [isPageLoadingFailed, setisPageLoadingFailed] = useState(false);\n    const [errorMsg, setErrorMsg] = useState({ open: false, message: '', vertical: 'top', horizontal: 'center', severity:'success' });\n\n    const { vertical, horizontal, open, message, severity } = errorMsg;\n\n    useEffect(() => {\n        handleRegestration();\n    }, [selectedPlan]);\n\n    const handleSnackbarClose = () => {\n        setErrorMsg({ open: false, message: '', vertical: 'top', horizontal: 'center', });\n    }\n    const handleUpdateActiveStep = (nextStage) => {\n        setActiveStep(nextStage)\n    }\n\n    const handleScbscriptionActions = (step, selectedplan) => {\n        if (step === 1) {\n            handleUpdateActiveStep(step);\n        }\n        else {\n            setSelectedPlan(selectedplan);\n        }\n\n    }\n\n    const handleRegestration = async () => {\n        console.log('selectedPlan', selectedPlan);\n        if (JSON.stringify(selectedPlan) !== JSON.stringify({})) {\n            try {\n                setisPageLoading(true);\n                const { data } = await axios.post(`${process.env.REACT_APP_SERVER}/signup`, {\n                    institutionData: institutionDetails,\n                    userData: userDetails,\n                    subscriptionData: selectedPlan\n                });\n                console.log(data);\n                if (data) {\n                    setErrorMsg({ open: true, message: `Email has been sent to ${userDetails.email} to set the password.`, vertical: 'top', horizontal: 'center', severity:'success' });\n                    window.open(data.url, \"_self\");\n                }\n                setisPageLoading(false);\n            }\n            catch (error) {\n                console.log(error);\n                if (error.response?.status === 400 || error.response?.status === 502) {\n                    setErrorMsg({ open: true, message: error.response?.data?.error, vertical: 'top', horizontal: 'center',severity:'error' });\n                }\n                setisPageLoading(false);\n                //setisPageLoadingFailed(true);\n            }\n        }\n    }\n\n    if (isPageLoadingFailed) {\n        return (\n            <Box style={{ paddingTop: '50%', backgroundColor: 'white' }}>\n                <Loading isPageLoading={isPageLoading} />\n            </Box>\n        )\n    }\n    else if (isPageLoading) {\n        return (\n            <Box style={{ top: '50%' }}>\n                <Loading isPageLoading={isPageLoading} />\n            </Box>\n        )\n    }\n    else {\n        return (\n            <React.Fragment>\n                <div>\n                    <Stepper alternativeLabel activeStep={activeStep}>\n                        <Step>\n                            <StepLabel>Instuition Registration</StepLabel>\n                        </Step>\n                        <Step>\n                            <StepLabel>User Registration</StepLabel>\n                        </Step>\n                        <Step>\n                            <StepLabel>Subscription</StepLabel>\n                        </Step>\n                    </Stepper>\n                    {\n                        activeStep === 0 ?\n                            <InstitutionReg institutionDetails={institutionDetails} updateActiveStep={handleUpdateActiveStep} handleInstitutionDetails={(data) => { setInstitutionDetails(data) }} />\n                            : activeStep === 1 ?\n                                <UserReg userDetails={userDetails} updateActiveStep={handleUpdateActiveStep} handleUserDetails={(userData) => { setUserDetails(userData) }} />\n                                : activeStep === 2 ?\n                                    <Subscription onActions={handleScbscriptionActions} currentProduct = ''/> : ''\n                    }\n                </div>\n                <Stack spacing={2} sx={{ width: '100%' }}>\n                    <Snackbar open={open} autoHideDuration={6000} onClose={handleSnackbarClose} anchorOrigin={{ vertical, horizontal }} key={vertical + horizontal}>\n                        <Alert onClose={handleSnackbarClose} severity={severity} sx={{ width: '100%' }}>\n                            {message}\n                        </Alert>\n                    </Snackbar>\n                </Stack>\n            </React.Fragment>\n        )\n    }\n}\n\nexport default Registration","import React, { useState, useEffect } from 'react'\nimport { useStyles } from './SubscriptionStyle';\nimport Box from '@mui/material/Box';\nimport Card from '@mui/material/Card';\nimport CardActions from '@mui/material/CardActions';\nimport CardContent from '@mui/material/CardContent';\nimport CircleIcon from '@mui/icons-material/Circle';\nimport Button from '@mui/material/Button';\nimport axios from 'axios';\nimport { Grid, List, ListItem, Typography } from '@material-ui/core';\nimport Loading from '../../components/loading/Loading';\n\nconst Subscription = (props) => {\n  const classes = useStyles();\n  let unmounted = false;\n\n  const [isPageLoading, setisPageLoading] = useState(false);\n  const [isPageLoadingFailed, setisPageLoadingFailed] = useState(false);\n  const [productDetails, setProductDetails] = useState({});\n\n  useEffect(() => {\n    getAllProducts();\n  }, [unmounted]);\n\n  const getAllProducts = async () => {\n    setisPageLoading(true);\n    unmounted = false;\n    const source = axios.CancelToken.source();\n    await axios.get(`${process.env.REACT_APP_SERVER}/products`)\n      .then((response) => {\n        setProductDetails(response.data.data);\n      })\n      .catch((error) => {\n        if (!unmounted) {\n\n        }\n        setisPageLoadingFailed(true);\n      })\n      .finally(() => {\n        setisPageLoading(false);\n        return function () {\n          unmounted = true;\n          source.cancel(\"Cancelling in cleanup\");\n        };\n      });\n  }\n\n  if (isPageLoadingFailed) {\n    return (\n      <Box style={{ paddingTop: '50%', backgroundColor: 'white' }}>\n        <Loading isPageLoading={isPageLoading} />\n      </Box>\n    )\n  }\n  else if (isPageLoading) {\n    return (\n      <Box style={{ top: '50%' }}>\n        <Loading isPageLoading={isPageLoading} />\n      </Box>\n    )\n  }\n  else {\n    return (\n      <Box className={classes.box}>\n        <Card variant=\"outlined\" style={{ height: '83vh' }}>\n          <Typography variant='h4' className={classes.font} style={{ textAlign: 'center', margin: '20px 20px 0px 20px' }}>\n            Explore the right plan for your Instuition\n          </Typography>\n          <Typography variant='h6' className={classes.font} style={{ textAlign: 'center', margin: '0px 20px 20px 20px' }}>\n            Choose a plan that suits you the best!\n          </Typography>\n          <div style={{ margin: 0 }}>\n            <Grid container className={classes.gridContainer}>\n              <Grid item className={classes.grid}>\n                <Card variant='elevation' elevation={10} className={classes.card}>\n                  <Typography variant='h5' className={classes.font} style={{ textAlign: 'center', backgroundColor: '#c0c0c07a' }}>\n                    {productDetails[0]?.product?.name}\n                  </Typography>\n                  <CardContent className={classes.font} style={{ textAlign: 'center' }}>\n                    <Typography variant='h4'>\n                      ₹{productDetails[0]?.unit_amount / 100}/year\n                    </Typography>\n                    <Typography variant='h6'>\n                    <List sx={{ listStyleType: 'disc' }}>\n                      {\n                        productDetails[0]?.product?.metadata?.Features?.split(';').map((feature,index) => (\n                          <ListItem key={index} sx={{ display: 'list-item' }}>\n                          <CircleIcon style={{ paddingRight: 10 }} />{feature}\n                        </ListItem>\n                        ))\n                      }\n                      </List>\n                    </Typography>\n                  </CardContent>\n                  <CardActions style={{ position: 'fixed', bottom: '110px', margin: '10% 10% 0% 6%' }}>\n                    <Button variant='outlined' disabled = {props.currentProduct === productDetails[0]?.product?.name} size=\"medium\" onClick={() => { props.onActions(2,productDetails[0]) }}>Choose the Plan</Button>\n                  </CardActions>\n                </Card>\n              </Grid>\n              <Grid item className={classes.grid}>\n                <Card variant='elevation' elevation={10} className={classes.card}>\n                  <Typography variant='h5' className={classes.font} style={{ textAlign: 'center', backgroundColor: '#c0c0c07a' }}>\n                    {productDetails[1]?.product?.name}\n                  </Typography>\n                  <CardContent className={classes.font} style={{ textAlign: 'center' }}>\n                    <Typography variant='h4'>\n                      ₹{productDetails[1]?.unit_amount / 100}/year\n                    </Typography>\n                    <Typography variant='h6'>\n                      <List sx={{ listStyleType: 'disc' }}>\n                      {\n                        productDetails[1]?.product?.metadata?.Features?.split(';').map((feature,index) => (\n                          <ListItem key={index} sx={{ display: 'list-item' }}>\n                          <CircleIcon style={{ paddingRight: 10 }} />{feature}\n                        </ListItem>\n                        ))\n                      }\n                      </List>\n                    </Typography>\n                  </CardContent>\n                  <CardActions style={{ position: 'fixed', bottom: '110px', margin: '10% 10% 0% 6%' }}>\n                    <Button variant='outlined' size=\"medium\" disabled = {props.currentProduct === productDetails[1]?.product?.name} onClick={() => { props.onActions(2,productDetails[1])}}>Choose the Plan</Button>\n                  </CardActions>\n                </Card> \n              </Grid>\n              <Grid item className={classes.grid}>\n                <Card variant='elevation' elevation={10} className={classes.card}>\n                  <Typography variant='h5' className={classes.font} style={{ textAlign: 'center', backgroundColor: '#c0c0c07a' }}>\n                    {productDetails[2]?.product?.name}\n                  </Typography>\n                  <CardContent className={classes.font} style={{ textAlign: 'center' }}>\n                    <Typography variant='h4'>\n                      ₹{productDetails[2]?.unit_amount / 100}/year\n                    </Typography>\n                    <Typography variant='h6'>\n                      <List sx={{ listStyleType: 'disc' }}>\n                      {\n                        productDetails[2]?.product?.metadata?.Features?.split(';').map((feature,index) => (\n                          <ListItem key={index} sx={{ display: 'list-item' }}>\n                          <CircleIcon style={{ paddingRight: 10 }} />{feature}\n                        </ListItem>\n                        ))\n                      } \n                      </List>\n                    </Typography>\n                  </CardContent>\n                  <CardActions style={{ position: 'fixed', bottom: '110px', margin: '10% 10% 0% 6%' }}>\n                    <Button variant='outlined' size=\"medium\" disabled = {props.currentProduct === productDetails[2]?.product?.name} onClick={() => {props.onActions(2,productDetails[2]) }}>Choose the Plan</Button>\n                  </CardActions>\n                </Card>\n              </Grid>\n            </Grid>\n          </div>\n          <CardActions style={{margin: \"5px auto\", alignItems:\"center\",justifyContent:\"center\"}}>\n          <Button variant='contained' size=\"medium\" onClick={() => {props.onActions(1,{})}}>{props.currentProduct!=='' ? 'Close' : 'Previous'}</Button>\n        </CardActions>\n        </Card>\n      </Box>\n    )\n\n  }\n}\n\nexport default Subscription","import { makeStyles } from \"@material-ui/core/styles\";\n\nexport const useStyles = makeStyles(theme => ({\n    box: {\n        maxWidth: '85%', \n        minHeight: \"80vh\",\n         margin: \"10px auto\"\n      },\n      gridContainer: {\n        flex: 1, \n        justifyContent: 'space-around',\n        [theme.breakpoints.down('sm')]: {\n            flexDirection:'column'\n          }\n      },\n      grid: {\n        width: '30%', \n        [theme.breakpoints.down('sm')]: {\n            width: '90%'\n          }\n      },\n      card:{\n        height: '60vh', \n        position: 'relative',\n        [theme.breakpoints.down('sm')]: {\n            height: 'auto',\n            position: 'initial'\n          }\n      },\n      font:{\n        color: 'rgba(0, 0, 0, 0.54)',\n        padding: 0,\n        fontsize: '1rem',\n        fontfamily: [\"Roboto\", \"Helvetica\", \"Arial\", 'sans-serif'],\n        fontweight: 400,\n        lineheight: 1,\n        letterspacing: '0.00938em'\n      },\n      centerScreen: {\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        textAlign: 'center',\n        minHeight: '100vh',\n      },\n      successBox: {\n        background: '#fff',\n        textAlign: 'center',\n        //padding: '50px 30px',\n        marginBottom: '30px',\n        borderRadius: '3px',\n        boxShadow: '0 10px 30px rgb(0 0 0 / 10%)',\n    }\n}))"],"names":["useStyles","makeStyles","theme","box","maxWidth","minHeight","margin","grid","width","inputContainer","paddingBottom","input","breakpoints","down","font","color","padding","fontsize","fontfamily","fontweight","lineheight","letterspacing","props","classes","React","institutionDetails","name","instName","setInstName","phone","instPhone","setInstPhone","email","instEmail","setInstEmail","addressLine1","addrLine1","setAddrLine1","addressLine2","addrLine2","setAddrLine2","city","setCity","district","setDistrict","state","setState","country","setCountry","zipCode","pinCode","setPincode","invalidList","setInvalidList","handleForwardReg","instrutionData","updateActiveStep","handleInstitutionDetails","className","variant","CardContent","Grid","container","item","FormControl","Container","InputLabel","htmlFor","TextField","error","includes","id","value","onChange","event","target","helperText","style","CardActions","alignItems","justifyContent","Button","size","onClick","isValid","tempInvalidList","push","test","length","match","userDetails","userName","setUserName","userPhone","setUserPhone","userEmail","setUserEmail","validate","nextStep","UserData","handleUserDetails","position","top","left","transform","backgroundColor","border","boxShadow","p","overflow","useState","activeStep","setActiveStep","setInstitutionDetails","setUserDetails","selectedPlan","setSelectedPlan","isPageLoading","setisPageLoading","isPageLoadingFailed","open","message","vertical","horizontal","severity","errorMsg","setErrorMsg","useEffect","handleRegestration","handleSnackbarClose","handleUpdateActiveStep","nextStage","console","log","JSON","stringify","axios","process","institutionData","userData","subscriptionData","data","window","url","response","status","paddingTop","Loading","Stepper","alternativeLabel","Step","StepLabel","Subscription","onActions","step","selectedplan","currentProduct","Stack","spacing","sx","Snackbar","autoHideDuration","onClose","anchorOrigin","Alert","unmounted","setisPageLoadingFailed","productDetails","setProductDetails","getAllProducts","source","then","catch","finally","cancel","height","textAlign","gridContainer","elevation","card","product","unit_amount","listStyleType","metadata","Features","split","map","feature","index","display","paddingRight","bottom","disabled","flex","flexDirection","centerScreen","successBox","background","marginBottom","borderRadius"],"sourceRoot":""}